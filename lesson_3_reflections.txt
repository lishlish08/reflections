1) What happens when you initialize a repository? Why do you need to do it?

It creates a folder named .git which will keep track of the different
versions of your file(s). You need to do it because without it there's no
way for it to keep the history log of the changes that you make.

2) How is the staging area different from the working directory and the
repository? What value do you think it offers?

The staging area is different than the working directory because it contains
the file(s) that you have made changes to; kind of what you're going to
update. It's different from the repository because the latest version of
these has not yet made it there (since you haven't commit'ed yet).
The staging area is a good structure because it lets you divide and conquer
each logical change, as well as provide the safety net of not yet updating
(commit'ing) a file if you see that it'll cause a problem.

3) How can you use the staging area to make sure you have one commit per
logical change?

You can check the changes between the working repository and the staging
area, as well as changes between the staging area and the last commit, such
that you make sure that you're not staging commits that are too big, or
one's that are too small. You can also check that you aren't adding too
many files are once, since each file could have its own logical change.

4) What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

If you're making an experimental change making a branch helps by allowing
you the satisfaction of knowing you still have a master branch to fall back
on. Or if you're working on a team, and you an someone else are changing
different modules; it helps for each of you to have your own branch.

5) How do the diagrams help you visualize the branch structure?

They help you visualize the structure because it paints a clear picture of the
"step by step" that you have done as you move along with each commit. Meaning,
that you can see the first step that you did in your project (i.e. your first
commit), then you have the second step (your second commit). Then you can have a
third step, which could be creating a second branch, and you can follows ~it's~
path through the different commits you made to it, etc. The branch structure
really helps you picture the tree in your mind, making it easier to follow than
if you were just looking at text with different commit IDs.
